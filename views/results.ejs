<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Domain Availability Checker</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        height: 100vh;
        background-color: #f4f4f4;
      }

      .widget {
        text-align: left;
        max-width: 100%;
        margin: 0 auto;
        padding: 20px;
        background-color: transparent;
      }

      .input-group {
        display: flex;
        align-items: center;
        margin-top: 20px;
      }

      .prefix {
        font-size: 18px;
        padding: 22px;
        background: #eee;
      }

      input {
        padding: 20px;
        border: 0px solid #ccc;
        flex-grow: 1;
        min-height: 25px;
      }

      button {
        padding: 24px 25px;
        background-color: #003b44;
        color: white;
        border: none;
        border-radius: 0px;
        cursor: pointer;
        min-height: 21px;
      }

      button:hover {
        background-color: #0056b3;
      }

      .results-container {
        max-width: 100%;
        margin: 15px auto;
        border: 1px solid grey;
        padding: 20px;
        border-radius: 8px;
        background-color: white;
        display: none;
      }

      .domain-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid #ccc;
        transition: background-color 0.3s;
      }

      .domain-row.selected {
        background-color: #fffee4;
      }

      .domain-row:last-child {
        border-bottom: none;
      }

      .status {
        display: flex;
        flex-direction: column;
        align-items: center;
        /* margin-right: auto;
        margin-left: auto; */
        text-align: center;
      }

      .available {
        color: #38b6ff;
        font-size: 12px;
        font-weight: normal;
      }

      .taken {
        color: #ff4d4d;
        font-size: 12px;
        font-weight: normal;
        text-align: center;
      }

      .price {
        color: #333;
        font-size: 12px;
        font-weight: normal;
      }

      .buy-button {
        padding: 10px 20px;
        background-color: transparent;
        color: black;
        border: 1px solid grey;
        border-radius: 0px;
        cursor: pointer;
        margin-left: 20px;
      }

      .buy-button:hover {
        background-color: #0056b3;
        color: white;
      }

      .form-group {
        margin-bottom: 10px;
      }

      .form-group label {
        display: block;
        font-size: 14px;
      }

      .form-group input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }

      .hidden {
        display: none;
      }

      .loader {
        border: 5px solid #f3f3f3;
        border-top: 5px solid #003b44;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
        margin: 20px auto;
      }

      .progress-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 20px 0;
      }

      .progress-step {
        flex: 1;
        text-align: center;
        position: relative;
        font-weight: bold;
        color: #ccc;
      }

      .progress-step.active {
        color: #38b6ff;
      }

      .progress-step::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: calc(100% - 50%);
        height: 2px;
        background-color: #ccc;
        transform: translateX(50%) translateY(-50%);
        z-index: -1;
      }

      .progress-step:last-child::after {
        display: none;
      }

      .selected-domain {
        text-align: center;
        font-size: 18px;
        margin-top: 10px;
        font-weight: bold;
        color: #003b44;
      }

      .confirmation-container {
        max-width: 100%;
        margin: 15px auto;
        border: 1px solid grey;
        padding: 20px;
        border-radius: 8px;
        background-color: white;
        display: none;
      }

      .confirmation-box {
        border: 1px solid #ccc;
        padding: 15px;
        margin-bottom: 10px;
      }

      .confirmation-button {
        padding: 10px 20px;
        background-color: #003b44;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }

      .confirmation-button:hover {
        background-color: #0056b3;
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body>
    <div class="widget">
      <h2>Find your perfect domain</h2>
      <div class="input-group">
        <span class="prefix">www.</span>
        <input type="text" id="domainInput" placeholder="Enter domain name" />
        <button id="checkButton">Explore</button>
      </div>

      <!-- Progress Bar -->
      <div class="progress-bar" id="progressBar">
        <div class="progress-step" id="progressDomain">Domain</div>
        <div class="progress-step" id="progressRegister">Register</div>
        <div class="progress-step" id="progressConfirm">Confirm</div>
      </div>

      <!-- Selected Domain Display -->
      <div id="selectedDomain" class="selected-domain hidden"></div>
    </div>

    <!-- Loader -->
    <div id="loader" class="loader hidden"></div>

    <!-- Search Results and Registrant Form Container -->
    <div class="results-container" id="resultsContainer">
      <h2>Search Results</h2>
    </div>

    <div id="registrantForm" class="results-container hidden">
      <h1>Login / Register</h1>
      <h3>Login Below</h3>
      <div class="form-group">
        <label for="login-username">Username</label>
        <input type="text" id="login-username" required />
      </div>
      <div class="form-group">
        <label for="login-password">Password</label>
        <input type="password" id="login-password" required />
      </div>
      <button id="submitLoginButton" onclick="submitLoginForm()">Login</button>
      <!-- </div>

    <div id="registrantForm" class="results-container hidden"> -->
      <h3>Register Below</h3>
      <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" required />
      </div>
      <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" required />
      </div>
      <div class="form-group">
        <label for="firstName">First Name</label>
        <input type="text" id="firstName" required />
      </div>
      <div class="form-group">
        <label for="lastName">Last Name</label>
        <input type="text" id="lastName" required />
      </div>
      <div class="form-group">
        <label for="address">Address</label>
        <input type="text" id="address" required />
      </div>
      <div class="form-group">
        <label for="city">City</label>
        <input type="text" id="city" required />
      </div>
      <div class="form-group">
        <label for="state">State</label>
        <input type="text" id="state" required />
      </div>
      <div class="form-group">
        <label for="postCode">Post Code</label>
        <input type="text" id="postCode" required />
      </div>
      <div class="form-group">
        <label for="country">Country (e.g., AU)</label>
        <input type="text" id="country" required />
      </div>
      <div class="form-group">
        <label for="countryCode">Country Code (e.g., 61)</label>
        <input type="text" id="countryCode" required />
      </div>
      <div class="form-group">
        <label for="phone">Phone Number</label>
        <input type="text" id="phone" required />
      </div>
      <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" required />
      </div>
      <div class="form-group">
        <label for="accountType">Account Type (e.g., business)</label>
        <input type="text" id="accountType" required />
      </div>
      <div class="form-group">
        <label for="businessName">Business Name</label>
        <input type="text" id="businessName" />
      </div>
      <div class="form-group">
        <label for="businessNumberType">Business Number Type (e.g., ABN)</label>
        <input type="text" id="businessNumberType" />
      </div>
      <div class="form-group">
        <label for="businessNumber">Business Number</label>
        <input type="text" id="businessNumber" />
      </div>
      <button id="submitRegistrantButton" onclick="submitRegisterForm()">
        Create
      </button>
    </div>

    <!-- Confirmation Container -->
    <div id="confirmationContainer" class="confirmation-container hidden">
      <h2>Confirmation</h2>
      <div class="confirmation-box" id="domainConfirmation">
        <strong>Domain Confirmation</strong><br />
        Domain: www.' + selectedDomainName + '<br />Price: Â£' +
        selectedDomainPrice + ' Per Year<br />
        Auto Renew
      </div>
      <div class="confirmation-box" id="accountCreated">
        <strong>Account Created</strong><br />
        Customer ID: M12097302<br />
        Username: Smith9876<br />
        Name: Sample Smith
      </div>
      <button class="confirmation-button">Purchase domain</button>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        document
          .getElementById("checkButton")
          .addEventListener("click", async () => {
            setProgressBarStep("Domain");
            const domain = document.getElementById("domainInput").value.trim();
            const resultsContainer =
              document.getElementById("resultsContainer");
            const loader = document.getElementById("loader");

            if (!domain) {
              resultsContainer.innerHTML =
                "<h2>Search Results</h2><p>Please enter a domain name.</p>";
              resultsContainer.style.display = "block";
              return;
            }

            // Clear previous results
            resultsContainer.style.display = "none";
            resultsContainer.innerHTML = "<h2>Search Results</h2>";

            // Show loader
            loader.classList.remove("hidden");

            try {
              console.log("Sending request to check domain availability...");
              const response = await fetch(
                `/domain-availability?domain=${encodeURIComponent(domain)}`
              );

              console.log("Response received:", response);

              if (!response.ok) {
                console.error("Response status not ok:", response.status);
                throw new Error("Network response was not ok");
              }

              const data = await response.json();
              console.log("Response data:", data);

              // Hide loader
              loader.classList.add("hidden");

              if (data.error) {
                resultsContainer.innerHTML += `<p>${data.error}</p>`;
                resultsContainer.style.display = "block";
                return;
              }

              if (!data.data || data.data.length === 0) {
                resultsContainer.innerHTML +=
                  "<p>No domains available or invalid domain name.</p>";
                resultsContainer.style.display = "block";
                return;
              }

              // Display results container
              resultsContainer.style.display = "block";

              // Display the domain results
              data.data.forEach((domainItem) => {
                const domainRow = document.createElement("div");
                domainRow.classList.add("domain-row");
                domainRow.id = `domainRow-${domainItem.domain_name}`;

                const domainNameDiv = document.createElement("div");
                domainNameDiv.classList.add("domain-name");
                domainNameDiv.innerHTML = `www.${domainItem.domain_name}`;
                domainRow.appendChild(domainNameDiv);

                const statusDiv = document.createElement("div");
                statusDiv.classList.add("status");

                if (domainItem.is_available) {
                  statusDiv.innerHTML = `
                                  <div class="available">Available</div>
                                  <div class="price">&pound;${domainItem.register_price} / Per Year</div>
                              `;
                  const buyButton = document.createElement("button");
                  buyButton.classList.add("buy-button");
                  buyButton.innerHTML = "Register";
                  buyButton.onclick = () => {
                    showRegistrantForm(
                      domainItem.domain_name,
                      domainItem.register_price
                    );
                    displaySelectedDomain(domainItem.domain_name);
                  };
                  domainRow.appendChild(statusDiv);
                  domainRow.appendChild(buyButton);
                } else {
                  statusDiv.innerHTML = `<div class="taken">Taken</div>`;
                  domainRow.appendChild(statusDiv);
                }

                resultsContainer.appendChild(domainRow);
              });
            } catch (error) {
              console.error("Error fetching domain availability:", error);
              resultsContainer.innerHTML += `<p>Error fetching domain availability: ${error.message}</p>`;
              resultsContainer.style.display = "block";

              // Hide loader
              loader.classList.add("hidden");
            }
          });

        window.showRegistrantForm = function (domainName, domainPrice) {
          selectedDomainName = domainName;
          selectedDomainPrice = domainPrice;
          setProgressBarStep("Register");
          console.log("Showing registrant form for domain:", domainName);
          const resultsContainer = document.getElementById("resultsContainer");
          // const loginForm = document.getElementById("loginForm");
          const registrantForm = document.getElementById("registrantForm");
          resultsContainer.style.display = "none";
          // loginForm.style.display = "block";
          registrantForm.style.display = "block";
          registrantForm.scrollIntoView({ behavior: "smooth" });
        };

        window.submitLoginForm = function () {
          console.log("Submitting login form...");
          const formData = new FormData();
          formData.append(
            "username",
            document.getElementById("login-username").value
          );
          formData.append(
            "password",
            document.getElementById("login-password").value
          );
        };

        window.submitRegisterForm = async function () {
          console.log("Submitting registrant form...");

          const username = document.getElementById("username").value;
          const password = document.getElementById("password").value;

          const first_name = document.getElementById("firstName").value;
          const last_name = document.getElementById("lastName").value;
          const address = document.getElementById("address").value;
          const city = document.getElementById("city").value;
          const state = document.getElementById("state").value;

          const postcode = document.getElementById("postCode").value;
          const country = document.getElementById("country").value;
          const country_code = parseInt(
            document.getElementById("countryCode").value
          );

          const phone = document.getElementById("phone").value;
          const email = document.getElementById("email").value;

          const account_type = document.getElementById("accountType").value;
          const business_name = document.getElementById("businessName").value;
          const document_number_type =
            document.getElementById("businessNumberType").value;
          const business_number =
            document.getElementById("businessNumber").value;

          const data = {
            username,
            password,
            first_name,
            last_name,
            address,
            city,
            state,
            postcode,
            country,
            country_code,
            phone,
            email,
            account_type,
            business_name,
            document_number_type,
            business_number,
          };

          await fetch("/registrant", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          })
            .then((response) => {
              console.log("Response from registrant creation:", response);
              if (!response.ok) {
                return response.text().then((text) => {
                  throw new Error(text);
                });
              }
              return response.json();
            })
            .then((result) => {
              console.log("Registrant creation result:", result);
              if (result.error) {
                alert("Error: " + result.error);
              } else {
                alert(
                  "Customer registered successfully with ID: " + result.customer
                );
                // Proceed to show confirmation
                showConfirmation(result);
              }
            })
            .catch((error) => {
              console.error("Error submitting registrant form:", error);
              alert("Error submitting registrant form: " + error.message);
            });
        };

        function setProgressBarStep(step) {
          const steps = ["Domain", "Register", "Confirm"];
          steps.forEach(function (currentStep) {
            const element = document.getElementById(`progress${currentStep}`);
            if (currentStep === step) {
              element.classList.add("active");
            } else {
              element.classList.remove("active");
            }
          });
        }

        function displaySelectedDomain(domainName) {
          let selectedDomainName = "";
          let selectedDomainPrice = "";
          const selectedDomainDiv = document.getElementById("selectedDomain");
          selectedDomainDiv.textContent = `Selected Domain: www.${domainName}`;
          selectedDomainDiv.classList.remove("hidden");
        }

        function showConfirmation(result) {
          setProgressBarStep("Confirm");
          const registrantForm = document.getElementById("registrantForm");
          const confirmationContainer = document.getElementById(
            "confirmationContainer"
          );
          registrantForm.style.display = "none";
          confirmationContainer.style.display = "block";
          confirmationContainer.scrollIntoView({ behavior: "smooth" });

          // Set confirmation details
          document.getElementById("domainConfirmation").innerHTML = `
          <strong>Domain Confirmation</strong><br>
          Domain: www.${selectedDomainName}<br>
          Price: Â£${selectedDomainPrice} Per Year<br>
          Auto Renew
      `;
          document.getElementById("accountCreated").innerHTML = `
          <strong>Account Created</strong><br>
          Customer ID: ${result.customer}<br>
          Username: ${document.getElementById("username").value}<br>
          Name: ${document.getElementById("firstName").value} ${
            document.getElementById("lastName").value
          }
      `;
        }
      });
    </script>

    <!-- <script>
      const stripe = Stripe(
        "pk_test_51IZk6CLWcouNeT9dn9WZIcKUsdj5Pgmg2w1GOuQxfHwrI0s4VEGIjnl0fUiSKoV3S95IVPxvxCD7wt27rfxSIy3200RPorXY4R"
      );
      const elements = stripe.elements();
      const cardElement = elements.create("card");
      cardElement.mount("#card-element");

      let currentDomain = "";
      let currentPrice = 0;
      let selectedEmailPackage = "";
      let selectedEmailPackagePrice = 0;

      // Handle domain search
      document
        .getElementById("checkButton")
        .addEventListener("click", async () => {
          const domain = document.getElementById("domainInput").value;
          const resultsContainer = document.getElementById("resultsContainer");

          // Clear previous results
          resultsContainer.innerHTML = "<h2>Search Results</h2>";

          try {
            const response = await fetch(
              `/domain-availability?domain=${domain}`
            );
            const data = await response.json();

            if (data.data.length === 0) {
              resultsContainer.innerHTML +=
                "<p>No domains available or invalid domain name.</p>";
              return;
            }

            data.data.forEach((domain) => {
              const domainRow = document.createElement("div");
              domainRow.classList.add("domain-row");
              domainRow.id = `domainRow-${domain.domain_name}`;

              const domainNameDiv = document.createElement("div");
              domainNameDiv.innerHTML = `www.${domain.domain_name}`;
              domainRow.appendChild(domainNameDiv);

              const statusDiv = document.createElement("div");
              statusDiv.classList.add("status");

              if (domain.is_available) {
                statusDiv.innerHTML = `
                            <div class="available">Available</div>
                            <div class="price">Â£${domain.register_price} / Per Year</div>
                        `;
                const buyButton = document.createElement("button");
                buyButton.classList.add("buy-button");
                buyButton.innerHTML = "Register";
                buyButton.onclick = () =>
                  highlightRow(domain.domain_name, domain.register_price);
                domainRow.appendChild(buyButton);
              } else {
                statusDiv.innerHTML = `<div class="taken">Taken</div>`;
              }

              domainRow.appendChild(statusDiv);
              resultsContainer.appendChild(domainRow);
            });
          } catch (error) {
            console.error("Error fetching domain availability:", error);
          }
        });

      function highlightRow(domainName, price) {
        document
          .querySelectorAll(".domain-row")
          .forEach((row) => row.classList.remove("selected"));
        document
          .getElementById(`domainRow-${domainName}`)
          .classList.add("selected");
        showHostingPackageForm(domainName, price);
      }

      async function showHostingPackageForm(domainName, price) {
        console.log("============> showHostingPackageForm ", domainName);
        console.log("============> showHostingPackageForm ", price);
        currentDomain = domainName;
        currentPrice = price;
        document
          .getElementById("emailHostingContainer")
          .classList.remove("hidden");
      }

      function selectPackage(packageName, packagePrice) {
        document
          .querySelectorAll("input[type='checkbox']")
          .forEach((checkbox) => (checkbox.checked = false));
        event.target.checked = true;
        selectedEmailPackage = packageName;
        selectedEmailPackagePrice = packagePrice;
      }

      function showRegistrantForm() {
        document
          .getElementById("emailHostingContainer")
          .classList.add("hidden");
        document.getElementById("registrantForm").classList.remove("hidden");
      }

      function skipHostingPackage() {
        selectedEmailPackage = "No package";
        selectedEmailPackagePrice = 0;
        showRegistrantForm();
      }

      function validate(data) {
        let isValid = true;

        if (!data.first_name) return !isValid;
        if (!data.last_name) return !isValid;
        if (!data.address) return !isValid;
        if (!data.city) return !isValid;
        if (!data.state) return !isValid;
        if (!data.post_code) return !isValid;
        if (!data.email) return !isValid;
        if (!data.country) return !isValid;
        if (!data.country_code) return !isValid;
        if (!data.phone) return !isValid;

        return isValid;
      }

      function submitRegisterForm() {
        const registrantData = {
          first_name: document.getElementById("firstName").value,
          last_name: document.getElementById("lastName").value,
          address: document.getElementById("address").value,
          city: document.getElementById("city").value,
          state: document.getElementById("state").value,
          post_code: document.getElementById("postCode").value,
          email: document.getElementById("email").value,
          country: document.getElementById("country").value,
          country_code: parseInt(document.getElementById("countryCode").value),
          phone: document.getElementById("phone").value,
          account_type: "business",
          business_name: "John & Doe Corp",
          business_number_type: "ABN",
          business_number: "12345678",
        };

        if (validate(registrantData)) {
          window.registrantData = registrantData;
          document.getElementById(
            "selectedDomainInfo"
          ).innerText = `Domain: www.${currentDomain} - Â£${currentPrice}/per year`;
          document.getElementById(
            "selectedEmailPackageInfo"
          ).innerText = `Email Hosting: ${selectedEmailPackage} - Â£${selectedEmailPackagePrice}/per year`;

          const totalPayment = currentPrice + selectedEmailPackagePrice;
          document.getElementById(
            "totalPaymentInfo"
          ).innerText = `Total Payment: Â£${totalPayment}/per year`;

          document.getElementById("registrantForm").classList.add("hidden");
          document.getElementById("paymentForm").classList.remove("hidden");
        }
      }

      // Payment form submission with Stripe
      document
        .getElementById("stripePaymentForm")
        .addEventListener("submit", async (event) => {
          event.preventDefault();

          const { paymentMethod, error } = await stripe.createPaymentMethod({
            type: "card",
            card: cardElement,
            billing_details: {
              name: document.getElementById("cardHolderName").value,
            },
          });

          if (error) {
            console.log("========= Ahhhhhhhh result.ejs error: " + error);
            document.getElementById("card-errors").innerText = error.message;
          } else {
            console.log("======== stripe success: " + paymentMethod.id);
            const totalPrice = (currentPrice + selectedEmailPackagePrice) * 100; // Convert to pence

            const response = await fetch(
              `/create-payment-intent?amount=${totalPrice}`,
              {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  paymentMethodId: paymentMethod.id,
                  domain: currentDomain,
                  registrant: window.registrantData,
                  emailPackagePrice: selectedEmailPackagePrice,
                  selectedEmailPackage: selectedEmailPackage,
                }),
              }
            );

            const data = await response.json();
            if (!data.status) {
              // document.getElementById("card-errors").innerText = data.error;
              alert(data.error_message);
            } else {
              console.log(
                "Payment successful! Domain and email hosting registered."
              );
              alert("Domain successfully registered:", currentDomain);
            }
          }
        });
    </script> -->
  </body>
</html>
